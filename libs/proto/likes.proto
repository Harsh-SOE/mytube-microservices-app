syntax = "proto3";

package Like;

enum LikeStatus {
  LIKE_STATUS_LIKE = 0;
  LIKE_STATUS_UNLIKE = 1;
  LIKE_STATUS_DISLIKE = 2;
  LIKE_STATUS_UNDISLIKE = 3;
}


message ModifyLikeStatusForVideoDto {
  string userId = 1;
  string videoId = 2;
  LikeStatus likeStatus = 3;
}

message LikesFindForUserForVideoDto {
  string videoId = 1;
  string userId = 2;
}

message LikesFindCountForAVideoDto {
  string videoId = 1;
}

message DislikesFindCountForAVideoDto {
  string videoId = 1;
}

message LikeModifiedStatusForVideoResponse {
  string response = 1;
}

message LikeFoundForVideoResponse {
  string id = 1;
  string userId = 2;
  string videoId = 3;
  LikeStatus likeStatus = 4;
}

message LikesFoundResponse {
  repeated LikeFoundForVideoResponse likeFoundResponse = 1;
}

message Empty {}

message LikesHealthCheckRequest {
  string service = 1;
}

message LikesFindCountForAVideoResponse {
  int64 likes = 1;
}

message DislikesFindCountForAVideoResponse {
  int64 dislikes = 1;
}


message LikesHealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;
  }
  ServingStatus status = 1;
}

service LikeService {
  rpc modifyLikeStatusForVideo(ModifyLikeStatusForVideoDto) returns (LikeModifiedStatusForVideoResponse) {}
  rpc getLikesCountForVideo(LikesFindCountForAVideoDto) returns (LikesFindCountForAVideoResponse) {}
  rpc getDislikesCountForVideo(DislikesFindCountForAVideoDto) returns (DislikesFindCountForAVideoResponse) {}
  rpc findLikeOfUserForAVideo(LikesFindForUserForVideoDto) returns (LikeFoundForVideoResponse) {}
  rpc Check(LikesHealthCheckRequest) returns (LikesHealthCheckResponse) {}
}