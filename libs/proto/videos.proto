syntax = "proto3";

package Video;

enum VideoTransportPublishStatus {
  TRANSPORT_PENDING = 0;
  TRANSPORT_PROCESSING = 1;
  TRANSPORT_PROCESSED = 2;
  TRANSPORT_PUBLISHED = 3;
  TRANSPORT_FAILED = 4;
}

enum VideoTransportVisibilityStatus {
  TRANSPORT_PRIVATE = 0;
  TRANSPORT_PUBLIC = 1;
  TRANSPORT_UNLISTED = 2;
}


message VideoCreateDto {
  string ownerId = 2;
  string title = 3;
  string videoFileUrl = 4;
  optional string description = 5;
  VideoTransportPublishStatus videoPublishStatus = 6;
  VideoTransportVisibilityStatus videoVisibilityStatus = 7;
}

message VideoFindDto {
  string id = 1;
}

message VideoUpdateDto {
  string id = 1;
  optional string title = 3;
  optional string videoFileUrl = 4;
  optional string description = 5;
  optional VideoTransportPublishStatus videoPublishStatus = 6;
  optional VideoTransportVisibilityStatus videoVisibilityStatus = 7;
}

message VideoPublishedResponse {
  string response = 1;
  string videoId = 2;
}

message VideoFoundResponse {
  string id = 1;
  string title = 2;
  string videoFileUrl = 3;
  optional string description = 4;
  VideoTransportPublishStatus videoPublishStatus = 5;
  VideoTransportVisibilityStatus videoVisibilityStatus = 6;
}

message VideosFoundResponse {
  repeated VideoFindDto videoFindDto = 1;
}

message VideoUpdatedResponse {
  string response = 1;
  string videoId = 2;
}

message Empty {}

message VideosHealthCheckRequest {
  string service = 1;
}

message VideosHealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;
  }
  ServingStatus status = 1;
}

service VideoService {
  rpc create(VideoCreateDto) returns (VideoPublishedResponse) {}
  rpc findOne(VideoFindDto) returns (VideoFoundResponse) {}
  rpc findAll(Empty) returns (VideosFoundResponse) {}
  rpc update(VideoUpdateDto) returns (VideoUpdatedResponse) {}
  rpc Check(VideosHealthCheckRequest) returns (VideosHealthCheckResponse) {}
}