// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v3.21.12
// source: email.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "Email";

export interface CreatedUserMessageDto {
  id: string;
  userName: string;
  email: string;
  fullName: string;
  dob: string;
  avatar: string;
  coverImage?: string | undefined;
}

export interface Empty {
}

export interface EmailHealthCheckRequest {
  service: string;
}

export interface EmailHealthCheckResponse {
  status: EmailHealthCheckResponse_ServingStatus;
}

export enum EmailHealthCheckResponse_ServingStatus {
  UNKNOWN = 0,
  SERVING = 1,
  NOT_SERVING = 2,
  SERVICE_UNKNOWN = 3,
  UNRECOGNIZED = -1,
}

export const EMAIL_PACKAGE_NAME = "Email";

export interface EmailServiceClient {
  sendEMail(request: CreatedUserMessageDto): Observable<Empty>;

  check(request: EmailHealthCheckRequest): Observable<EmailHealthCheckResponse>;
}

export interface EmailServiceController {
  sendEMail(request: CreatedUserMessageDto): Promise<Empty> | Observable<Empty> | Empty;

  check(
    request: EmailHealthCheckRequest,
  ): Promise<EmailHealthCheckResponse> | Observable<EmailHealthCheckResponse> | EmailHealthCheckResponse;
}

export function EmailServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["sendEMail", "check"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("EmailService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("EmailService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const EMAIL_SERVICE_NAME = "EmailService";
