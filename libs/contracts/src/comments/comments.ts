// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v3.21.12
// source: comments.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "Comment";

export interface CommentVideoDto {
  comment: string;
  userId: string;
  videoId: string;
}

export interface CommentVideoResponse {
  response: string;
}

export const COMMENT_PACKAGE_NAME = "Comment";

export interface CommentServiceClient {
  commentService(request: CommentVideoDto): Observable<CommentVideoResponse>;
}

export interface CommentServiceController {
  commentService(
    request: CommentVideoDto,
  ): Promise<CommentVideoResponse> | Observable<CommentVideoResponse> | CommentVideoResponse;
}

export function CommentServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["commentService"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("CommentService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("CommentService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const COMMENT_SERVICE_NAME = "CommentService";
