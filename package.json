{
  "name": "books",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/apps/books/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./apps/books/test/jest-e2e.json",
    "docker:clean:volumes": "echo \"Cleaning docker's dangling volumes\" && (docker volume ls -qf dangling=true | xargs -r docker volume rm)",
    "docker:clean:images": "echo \"Cleaning docker's dangling images\" && (docker image ls -qf dangling=true | xargs -r docker image rm)",
    "docker:build:dev": "echo '----------------------> | Building application in development mode | <----------------------' && COMPOSE_PARALLEL_LIMIT=2 docker compose -f compose.yml -f compose.dev.yml build --parallel",
    "docker:build:prod": "echo '----------------------> | Building application in production mode | <----------------------' && COMPOSE_PARALLEL_LIMIT=2 docker compose build --parallel && docker builder prune --all -f",
    "app:build:prod": "yarn docker:clean:images && sleep 1 && yarn docker:clean:volumes && sleep 1 && yarn docker:build:prod",
    "app:build:dev": "yarn docker:clean:images && sleep 1 && yarn docker:clean:volumes && sleep 1 && yarn docker:build:dev",
    "docker:start:prod": "echo 'Starting apps in production mode...' && docker compose up",
    "docker:start:dev": "echo 'Starting apps in production mode...' && docker compose -f compose.yml -f compose.dev.yml up --remove-orphans -V",
    "app:start:prod": "yarn docker:clean:images && sleep 1 && yarn docker:clean:volumes && sleep 1 && yarn docker:start:prod",
    "app:start:dev": "yarn docker:clean:images && sleep 1 && yarn docker:clean:volumes && sleep 1 && yarn docker:start:dev",
    "prisma:init": "ts-node scripts/init-prisma.script.ts",
    "prisma:generate:client": "ts-node scripts/generate-client.script.ts",
    "prisma:generate:migrations": "ts-node scripts/generate-migrations.script.ts",
    "grpc:generate:proto": "ts-node scripts/generate-prototype.script.ts"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.848.0",
    "@aws-sdk/lib-storage": "^3.888.0",
    "@aws-sdk/middleware-retry": "^3.374.0",
    "@aws-sdk/s3-request-presigner": "^3.848.0",
    "@compodoc/compodoc": "^1.1.31",
    "@grpc/grpc-js": "^1.13.4",
    "@grpc/proto-loader": "^0.8.0",
    "@grpc/reflection": "^1.0.4",
    "@nestjs/axios": "^4.0.1",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "11",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "11",
    "@nestjs/cqrs": "^11.0.3",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/microservices": "^11.1.3",
    "@nestjs/mongoose": "^11.0.3",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "11",
    "@nestjs/terminus": "^11.0.0",
    "@nestjs/typeorm": "^11.0.0",
    "@openfga/sdk": "^0.9.0",
    "@prisma/client": "^6.14.0",
    "@smithy/util-retry": "^4.1.2",
    "@willsoto/nestjs-prometheus": "^6.0.2",
    "argon2": "^0.44.0",
    "auth0": "^5.0.0",
    "axios": "^1.12.2",
    "cache-manager": "^7.0.1",
    "cache-manager-redis-yet": "^5.1.5",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "cloudinary": "^2.7.0",
    "copy-webpack-plugin": "^13.0.1",
    "dotenv": "^17.2.1",
    "express-session": "^1.18.2",
    "fluent-ffmpeg": "^2.1.3",
    "google-proto-files": "^5.0.1",
    "ioredis": "^5.7.0",
    "joi": "^17.13.3",
    "kafkajs": "^2.2.4",
    "keyv": "^5.5.2",
    "libphonenumber-js": "^1.12.23",
    "mongoose": "^8.17.0",
    "nestjs-grpc-reflection": "^0.2.2",
    "nestjs-typeorm-paginate": "^4.1.0",
    "nodemailer": "^7.0.6",
    "passport": "^0.7.0",
    "passport-auth0": "^1.4.4",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "^4.0.1",
    "passport-oauth2": "^1.8.0",
    "pg": "^8.16.3",
    "prom-client": "^15.1.3",
    "redis": "^5.6.1",
    "reflect-metadata": "^0.2.2",
    "response-time": "^2.3.4",
    "rxjs": "^7.8.2",
    "ts-proto": "^2.7.7",
    "typeorm": "^0.3.25",
    "uuid": "^11.1.0",
    "winston": "^3.17.0",
    "winston-loki": "^6.1.3",
    "zod": "^4.1.3"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.10",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/express": "^5.0.0",
    "@types/express-session": "^1.18.2",
    "@types/fluent-ffmpeg": "^2.1.27",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/passport-auth0": "^1.0.9",
    "@types/passport-google-oauth20": "^2.0.16",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-oauth2": "^1.8.0",
    "@types/response-time": "^2.3.9",
    "@types/supertest": "^6.0.2",
    "copyfiles": "^2.4.1",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "prisma": "^6.14.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapper": {
      "^@app/clients(|/.*)$": "<rootDir>/libs/clients/src/$1",
      "^@app/contracts(|/.*)$": "<rootDir>/libs/contracts/src/$1",
      "^@app/counters(|/.*)$": "<rootDir>/libs/counters/src/$1",
      "^@app/errors(|/.*)$": "<rootDir>/libs/errors/src/$1",
      "^@app/grpc(|/.*)$": "<rootDir>/libs/grpc/src/$1",
      "^@app/persistance(|/.*)$": "<rootDir>/libs/persistance/src/$1",
      "^@app/prisma-clients(|/.*)$": "<rootDir>/libs/prisma-clients/src/$1",
      "^@app/proto(|/.*)$": "<rootDir>/libs/proto/src/$1",
      "^@app/testing(|/.*)$": "<rootDir>/libs/testing/src/$1",
      "^@app/utils(|/.*)$": "<rootDir>/libs/utils/src/$1"
    }
  }
}
